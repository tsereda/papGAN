apiVersion: batch/v1
kind: Job
metadata:
  name: pap-train-job
spec:
  backoffLimit: 0
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      containers:
      # --- Main Training Container ---
      - name: pap-processing
        image: gitlab-registry.nrp-nautilus.io/prp/jupyter-stack/prp
        env:
        - name: REPO_PATH
          value: /opt/repo/papGAN
        # --- Visdom Server Configuration ---
        - name: VISDOM_SERVER
          value: "http://localhost"
        - name: VISDOM_PORT
          value: "8097"
        command:
        - "bash"
        - "-c"
        args:
        - |
          # --- User and Environment Setup ---
          echo "Running as user: $(whoami), UID: $(id -u), GID: $(id -g)"
          echo "Visdom server configured at: ${VISDOM_SERVER}:${VISDOM_PORT}"

          # Wait for Visdom server to be ready
          echo "Waiting for Visdom server to initialize..."
          for i in {1..30}; do
            if curl -s http://localhost:8097 > /dev/null; then
              echo "Visdom server is ready"
              break
            fi
            echo "Waiting for Visdom server... ($i/30)"
            sleep 2
          done

          # --- Git Repository Setup ---
          echo "Setting up Git repository..."
          cd ${REPO_PATH}
          git pull origin main || echo "Repository already exists, continuing"
          # --- Install dependencies ---
          echo "Installing required dependencies..."
          pip install dominate visdom wandb --no-cache-dir

          # --- Clone CycleGAN repository ---
          echo "Cloning CycleGAN repository..."
          git clone https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix.git
          # --- Install CycleGAN requirements ---
          echo "Installing CycleGAN requirements..."
          pip install -r ${REPO_PATH}/pytorch-CycleGAN-and-pix2pix/requirements.txt
          # --- Extract with fast zstd decompression ---
          apt-get update && apt-get install -y zstd
          echo "Extracting preprocessed data..."
          mkdir -p ${REPO_PATH}/cyclegan_dataset_256_split
          echo "/data/"
          ls -lh /data/
          if [ -f "/data/cyclegan_processed_data.tar.zst" ]; then
            echo "Preprocessed data file found, extracting..."
            tar -x -I "zstd -d -T0" -f /data/cyclegan_processed_data.tar.zst -C ${REPO_PATH}
          else
            echo "Preprocessed data file not found, skipping extraction"
          fi
          # --- Run training ---
          echo "Starting CycleGAN training..."
          cd ${REPO_PATH}
          python3 pytorch-CycleGAN-and-pix2pix/train.py \
            --dataroot cyclegan_dataset_256_split/ \
            --name healthy2unhealthy_cyclegan \
            --model cycle_gan \
            --batch_size 1 \
            --num_threads 1 \
            --n_epochs 100 \
            --n_epochs_decay 35 \
            --display_freq 10 \
            --print_freq 100 \
            --lambda_B 7.5 \
            --lambda_A 7.5 \
            --display_id 1 \
            --display_server "localhost" \
            --display_port "${VISDOM_PORT}" \
            --display_env "cyclegan_pap_training" # Optional: name for the Visdom environment

          echo "Training completed successfully."

          echo "Copying generator weights to PVC"
          cp /opt/repo/papGAN/checkpoints/healthy2unhealthy_cyclegan/latest_net_G_A.pth /data/latest_net_G_A.pth
          cp /opt/repo/papGAN/checkpoints/healthy2unhealthy_cyclegan/latest_net_G_B.pth /data/latest_net_G_B.pth
        volumeMounts:
        - name: git-repo
          mountPath: /opt/repo
        - name: pap-data-volume
          mountPath: /data
        - name: dshm
          mountPath: /dev/shm
        resources:
          limits:
            memory: 30Gi
            cpu: "24"
            nvidia.com/a100: "2"
          requests:
            memory: 25Gi
            cpu: "20"
            nvidia.com/a100: "2"

      # --- Visdom Server Sidecar Container ---
      - name: visdom-server
        image: python:3.9-slim
        command: ["bash", "-c"]
        securityContext:
          runAsUser: 0
        args:
          # Install visdom and start server (without specifying env_path)
          - |
            pip install visdom
            python -m visdom.server -port 8097
        ports:
        - containerPort: 8097
          name: visdom-ui
        # No volumeMounts needed for logs
        resources: # Give the sidecar some minimal resources
          limits:
            memory: 600Mi
            cpu: 600m
          requests:
            memory: 500Mi
            cpu: "500m"

      initContainers:
      - name: init-git-repo
        image: alpine/git
        args:
        - clone
        - --single-branch
        - -b
        - main
        - https://github.com/tsereda/papGAN
        - /opt/repo/papGAN
        volumeMounts:
        - name: git-repo
          mountPath: /opt/repo
        resources:
          limits:
            memory: 600Mi
            cpu: 600m
          requests:
            memory: 500Mi
            cpu: 500m  
      volumes:
      - name: git-repo
        emptyDir: {}
      - name: pap-data-volume
        persistentVolumeClaim:
          claimName: pap-data
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 16Gi
      restartPolicy: Never